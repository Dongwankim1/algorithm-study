package org.example.dp;

/**
 * packageName    : org.example.dp
 * fileName       : 동적계획법_이론
 * author         : mac
 * date           : 10/28/24
 * description    :
 * ===========================================================
 * DATE              AUTHOR             NOTE
 * -----------------------------------------------------------
 * 10/28/24        mac       최초 생성
 */
public class 동적계획법_이론 {
    //복잡한 문제를 여러 개의 간단한 문제ㅗㄹ 분리하여 부분의 문제들을 해결함으로써 최종적으로 복잡한 문제의 답을 구하는 방법
    /**
     * 1. 큰 문제를 작은 문제로 나눌 수 있어야한다.
     * 2. 작은 문제들이 반복돼 나타나고 사용되며 이 작은 문제들의 결괏값은 항상 같아야 한다.
     * 3. 모든 작은 문제들을 한 번만 계산해 DP 테이블에 저장하며 추후 재사용할 때는 이 DP 테이블을 이용한다.
     * 이를 메모이제이션 기법이라고 한다.
     * 4. 동적 계획벅은 톱-다운 방식과 바텀-업 방식으로 구현할수 있다.
     *
     */

}
